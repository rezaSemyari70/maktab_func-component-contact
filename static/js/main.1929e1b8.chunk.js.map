{"version":3,"sources":["Components/TableContacts/TableRow/TableRow.jsx","Components/TableContacts/FormContact/FormContact.jsx","Components/TableContacts/Table/Table.jsx","App.js","serviceWorker.js","index.js"],"names":["TableRow","props","firstname","lastname","email","phone","className","onClick","handleDelete","FormContact","useState","newContact","setNewContact","handleChange","event","value","target","name","handleClear","AOS","init","onSubmit","preventDefault","length","handleAdd","id","Math","floor","random","style","overflow","data-aos","data-aos-offset","data-aos-easing","htmlFor","onChange","type","placeholder","required","pattern","title","Table","contacts","setContacts","search","setSearch","filteredContacts","filter","contact","startsWith","toLowerCase","toUpperCase","data-aos-duration","obj","map","key","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1929e1b8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './TableRow.scss';\r\n\r\nfunction TableRow(props) {\r\n\r\n    return (\r\n        <tr>\r\n            <td>{`${props.firstname}`}</td>\r\n            <td>{`${props.lastname}`}</td>\r\n            <td>{`${props.email}`}</td>\r\n            <td>{`${props.phone}`}</td>\r\n            <td>\r\n                <button className=\"btn-outline-danger rounded \" onClick={props.handleDelete}>Delete</button>\r\n            </td>\r\n            \r\n        </tr>\r\n\r\n    );\r\n}\r\n\r\nexport default TableRow;\r\n","import React from 'react';\r\nimport {useState} from 'react';\r\nimport AOS from 'aos'\r\n\r\nimport './FormContact.scss';\r\n\r\nconst FormContact = (props) => {\r\n    const [newContact,\r\n        setNewContact] = useState({firstname: '', lastname: '', email: '', phone: ''});\r\n\r\n    const handleChange = (event) => {\r\n        const value = event.target.value;\r\n        setNewContact({\r\n            ...newContact,\r\n            [event.target.name]: value\r\n        })\r\n    }\r\n\r\n    const handleClear = () => {\r\n        setNewContact({firstname: '', lastname: '', email: '', phone: ''})\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (newContact.firstname.length > 0 && newContact.lastname.length > 0 && newContact.email.length > 0 && newContact.phone.length > 0) {\r\n            props.handleAdd({\r\n                ...newContact,\r\n                id: Math.floor(Math.random() * 100 + 10)\r\n            })\r\n            handleClear();\r\n        }\r\n    }\r\n\r\n    AOS.init()\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"mt-5 mb-4\" onSubmit={handleSubmit} >\r\n                <div className=\"col d-lg-flex\">\r\n                    <div className=\"col-1\"></div>\r\n                    <div className=\"col\" style={{overflow: \"hidden\"}}>\r\n                        <div className=\"d-flex justify-content-between align-items-center my-2\"data-aos=\"fade-left\"\r\n                                    data-aos-offset=\"300\" data-aos-easing=\"ease-in-sine\" >\r\n                            <label htmlFor=\"exampleInputName1\">Name:</label>\r\n                            <input\r\n                                className=\"form-control \"\r\n                                name={\"firstname\"}\r\n                                id=\"name\"\r\n                                value={newContact.firstname}\r\n                                onChange={handleChange}\r\n                                type=\"text\"\r\n                                placeholder=\"Enter name of contact\"\r\n                                required\r\n                                pattern=\".{4,}\"\r\n                                title=\"at least 4 character\"\r\n                                />\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-between align-items-center my-2\" data-aos=\"fade-right\"\r\n                                    data-aos-offset=\"300\" data-aos-easing=\"ease-sine\">\r\n                            <label htmlFor=\"exampleInputLastname1\">Lastname:</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name={\"lastname\"}\r\n                                id=\"lastname\"\r\n                                value={newContact.lastname}\r\n                                onChange={handleChange}\r\n                                type=\"text\"\r\n                                placeholder=\"Enter surname of contact\"\r\n                                required/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col\"  style={{overflow: \"hidden\"}}>\r\n                        <div className=\"d-flex justify-content-between align-items-center my-2\" data-aos=\"fade-left\"\r\n                                    data-aos-offset=\"300\" data-aos-easing=\"ease-sine\">\r\n                            <label htmlFor=\"exampleInputEmail1\">Eamil:</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name={\"email\"}\r\n                                id=\"email\"\r\n                                value={newContact.email}\r\n                                onChange={handleChange}\r\n                                type=\"email\"\r\n                                placeholder=\"Enter email of contact\"\r\n                                required/>\r\n                        </div>\r\n                        <div >\r\n                            <div className=\"d-flex justify-content-between align-items-center my-2\" data-aos=\"fade-right\"\r\n                                    data-aos-offset=\"300\" data-aos-easing=\"ease-in-sine\">\r\n                                <label htmlFor=\"exampleInputPhone1\">Phone:</label>\r\n                                <input\r\n                                className=\"form-control\"\r\n                                name={\"phone\"}\r\n                                id=\"phone\"\r\n                                value={newContact.phone}\r\n                                onChange={handleChange}\r\n                                type=\"tel\"\r\n                                placeholder=\"Enter phone of contact\"\r\n                                required\r\n                                pattern=\".{11,}\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                        <div className=\"d-flex d-lg-block pt-2 ml-lg-5  align-items-center justify-content-center boxBtn\">\r\n                            <div className=\"d-flex justify-content-between align-self-center\" >\r\n                                \r\n                                <button className=\"btn-success mr-2 mr-lg-0 saveBtn\" type=\"submit\" data-aos=\"zoom-in\">Save Contact</button>\r\n                            </div>\r\n                            <div className=\"d-flex align-items-center justify-content-between mt-2\" >\r\n                                <button className=\"btn-outline-secondary mb-2 clearBtn\" onClick={handleClear} type=\"reset\" data-aos=\"zoom-in-up\">Clear</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-1\"></div>\r\n                    \r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormContact;\r\n","import React, { useState } from 'react';\r\n\r\nimport TableRow from '../TableRow/TableRow';\r\nimport FormContact from '../FormContact/FormContact';\r\nimport './Table.scss';\r\nimport AOS from 'aos'\r\n\r\n\r\nfunction Table(props ){\r\n    const [contacts ,setContacts] = useState(\r\n       \r\n        [\r\n            {id:1, firstname: 'ali' , lastname: 'davudi' , email:'ali@gmail.com' , phone:'09123846734'},\r\n            {id:2, firstname: 'Saeed' , lastname: 'mohammadi' , email:'saeed@gmail.com' , phone:'09103843917'},\r\n            {id:3, firstname: 'kazem' , lastname: 'masumi' , email:'kazem@gmail.com' , phone:'09363843998'},\r\n            {id:4, firstname: 'Nima' , lastname: 'mohseni' , email:'nima@gmail.com' , phone:'09353843972'},\r\n            {id:5, firstname: 'Alireza' , lastname: 'sharifi' , email:'alireza@gmail.com' , phone:'09193843924'},\r\n            {id:6, firstname: 'Makan' , lastname: 'alimohammadi' , email:'makan@gmail.com' , phone:'09123843911'},\r\n            {id:7, firstname: 'nader' , lastname: 'amini' , email:'nader@gmail.com' , phone:'09193844928'},\r\n            {id:8, firstname: 'Yaser' , lastname: 'davudi' , email:'Yaser@gmail.com' , phone:'09153843949'},\r\n            {id:9, firstname: 'Karim' , lastname: 'davudi' , email:'karim@gmail.com' , phone:'09133413972'},\r\n            {id:10, firstname:'Morteza' , lastname: 'davudi' , email:'morteza@gmail.com' , phone:'09103843955'},\r\n        ]\r\n        \r\n    )\r\n\r\n    const [search , setSearch] = useState('');\r\n\r\n    const handleChange = (event) => {\r\n        setSearch(event.target.value);\r\n    }\r\n    \r\n    let filteredContacts = contacts.filter(contact => \r\n           contact.phone.startsWith(search) \r\n        || contact.firstname.startsWith(search.toLowerCase()) \r\n        || contact.firstname.startsWith(search.toUpperCase()));\r\n\r\n\r\n    const handleAdd = (obj) =>{\r\n        setContacts([...contacts , obj]);\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        setContacts([...contacts.filter(contact => contact.id !== id)]);\r\n    }\r\n\r\n    AOS.init()\r\n    \r\n    return <>\r\n        \r\n        <div className=\"container\">\r\n            <div className=\"row \">\r\n                <div className=\"col \">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"row justify-content-center mt-4 fixBox\" data-aos=\"fade-down\"\r\n     data-aos-easing=\"linear\"\r\n     data-aos-duration=\"1000\">\r\n                            <input \r\n                                className=\"form-control form-control-lg bg-info\"\r\n                                id=\"searchInput\"\r\n                                name={'search'} \r\n                                value={search} \r\n                                onChange={handleChange} \r\n                                placeholder=\"Search by Name or Phone\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"formBox\">\r\n                        <FormContact handleAdd={handleAdd}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center contentTable\">\r\n                <div className=\"col\" >\r\n                    <table className=\"table table-hover w3-animate-opacity\" >\r\n                        <thead className=\"headerColor\">\r\n                            <tr className=\"\">\r\n                                <th>Name</th>\r\n                                <th>Lastname</th>\r\n                                <th>Email</th>\r\n                                <th>Phone</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {filteredContacts.map(contact=>(\r\n                                <TableRow \r\n                                    key={contact.id} \r\n                                    firstname={contact.firstname}\r\n                                    lastname={contact.lastname}    \r\n                                    email={contact.email}    \r\n                                    phone={contact.phone}\r\n                                    handleDelete={()=>handleDelete(contact.id)}\r\n                                />\r\n                            ))}\r\n                                    \r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n   </>\r\n}\r\n\r\nexport default Table;\r\n","import React from 'react';\r\n\r\nimport './App.css';\r\nimport Table from './Components/TableContacts/Table/Table';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"backgroundImage\">\r\n      <div className=\"App\">\r\n        <Table/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}